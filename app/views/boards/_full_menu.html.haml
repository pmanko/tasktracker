- if archived
  = link_to '#', class: 'list-group-item list-group-heading', id: 'archived_boards', data: { board_id: (@project.boards.where(archived: true).size > 0 ? @project.boards.where(archived: true).natural_sort.first[1] : nil), object: 'toggle-archived-boards', message: @project.boards.where(archived: true).size, visible: boards_visible.to_s } do
    %span.badge= @project.boards.where(archived: true).size
    - if boards_visible
      Hide Archived
    - else
      Show Archived
- else
  = link_to boards_path( project_id: @project.id ), class: 'list-group-item list-group-heading', rel: 'tooltip', title: 'Click to Edit Boards', data: { container: 'body' } do
    Boards
    %span.glyphicon.glyphicon-edit.pull-right
  = link_to project_path(@project, board_id: 0), data: { object: 'board-select board-droppable', board_id: 0, board_name: 'Holding Pen', project_id: @project.id, archived: false, past_due_count: @project.sticky_count(nil, 'past_due'), my_past_due_count: @project.sticky_count(nil, 'past_due', current_user), upcoming_count: @project.sticky_count(nil, 'upcoming'), my_upcoming_count: @project.sticky_count(nil, 'upcoming', current_user), completed_count: @project.sticky_count(nil, 'completed'), my_completed_count: @project.sticky_count(nil, 'completed', current_user) }, class: "list-group-item #{'active' if params[:board_id].to_s == '0'}", id: 'unarchived_boards' do
    %span.badge
    Holding Pen

- @project.boards.where(archived: archived).natural_sort.each do |board_name, board_id|
  - board = @project.boards.find_by_id(board_id)
  = render 'boards/menu', board: board, boards_visible: boards_visible

- unless archived
  = link_to project_path(@project, board_id: 'all'), data: { object: 'board-select', board_id: 'all', board_name: 'All Tasks', archived: false, past_due_count: @project.sticky_count('all', 'past_due'), my_past_due_count: @project.sticky_count('all', 'past_due', current_user), upcoming_count: @project.sticky_count('all', 'upcoming'), my_upcoming_count: @project.sticky_count('all', 'upcoming', current_user), completed_count: @project.sticky_count('all', 'completed'), my_completed_count: @project.sticky_count('all', 'completed', current_user) }, class: "list-group-item #{'active' if params[:board_id] == 'all'}" do
    %span.badge
    All Tasks
